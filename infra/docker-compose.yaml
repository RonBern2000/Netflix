# TODO: Docker secrets file
services:
  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # RabbitMQ message broker port
      - "15672:15672" # Management UI port
    networks:
      - netflix_network
    environment:
      RABBITMQ_DEFAULT_USER: guest 
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
  userservice:
    build:
      context: ../BackendUserService/
    container_name: userservice
    # dns:
    #   - 8.8.8.8
    #   - 1.1.1.1
    ports:
      - "4000:4000"
    env_file:
      - ../BackendUserService/.env
    networks:
      - netflix_network
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
      
  paymentservice:
    build:
      context: ../BackendPaymentService/
    container_name: paymentservice
    # dns:
    #   - 8.8.8.8
    #   - 1.1.1.1
    ports:
      - "4001:4001"
    env_file:
      - ../BackendPaymentService/.env
    networks:
      - netflix_network
    restart: always
    depends_on:
      userservice:
        condition: service_started
      rabbitmq:
        condition: service_healthy
        restart: true
  movieservice:
    build:
      context: ../BackendMoviesService/
    container_name: movieservice
    # dns:
    #   - 8.8.8.8
    #   - 1.1.1.1
    ports:
      - "4002:4002"
    env_file:
      - ../BackendMoviesService/.env
    networks:
      - netflix_network
    restart: always
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
        restart: true
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - netflix_network
  proxy:
    build:
      context: ../Proxy/
    container_name: proxy
    # dns:
      # - 8.8.8.8
      # - 1.1.1.1
    ports:
      - "5000:5000"
    depends_on:
      - userservice
      - paymentservice
      - movieservice
    env_file:
      - ../Proxy/.env
    networks:
      - netflix_network
  client:
    build:
      context: ../Frontend/
    container_name: client
    # dns:
    #   - 8.8.8.8
    #   - 1.1.1.1
    ports:
      - "3000:3000"
    networks:
      - netflix_network
    # environment:
    #   - VITE_HTTPS=true
    #   - NODE_ENV=development
    

volumes:
  redis_data:

networks:
  netflix_network:
    driver: bridge